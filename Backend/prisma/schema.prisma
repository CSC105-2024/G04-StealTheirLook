generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  userId         Int      @id @default(autoincrement())
  username       String   @unique
  password       String
  displayName    String?
  profilePicture String?
  createdAt      DateTime @default(now())

  // Relations
  posts      Post[]
  savedPosts SavedPost[]
}

model Post {
  postId    Int      @id @default(autoincrement())
  image     String
  title     String
  tag       String
  createdAt DateTime @default(now())
  userId    Int

  // Relations
  user   User    @relation(fields: [userId], references: [userId], onDelete: Cascade)
  checks Check[] // Renamed for clarity
}

model Check {
  checkId Int    @id @default(autoincrement())
  brand   String
  clothe  String
  postId  Int

  // Relations
  post Post @relation(fields: [postId], references: [postId], onDelete: Cascade)
}

model SavedPost {
  savedPostId  String   @id // Format: "U{userId}P{postId}"
  originalPost Int
  image        String
  title        String
  tag          String
  createdAt    DateTime @default(now())
  userId       Int

  // Relations
  user        User         @relation(fields: [userId], references: [userId], onDelete: Cascade)
  savedChecks SavedCheck[] // Renamed for clarity
}

model SavedCheck {
  savedCheckId  String  @id // Format: "C{checkId}U{userId}"
  originalCheck Int
  brand         String
  clothe        String
  completed     Boolean @default(false)
  savedPostId   String

  // Relations
  savedPost SavedPost @relation(fields: [savedPostId], references: [savedPostId], onDelete: Cascade) // Renamed for clarity
}
